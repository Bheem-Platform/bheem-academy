<?php
/**
 * Standalone Admin Login for User Management Dashboard
 * Independent of Moodle authentication
 */

session_start();

// Load Moodle config for header support
require_once(__DIR__ . '/config.php');

// Admin credentials (CHANGE THESE IN PRODUCTION!)
define('ADMIN_USERNAME', 'bheemadmin');
define('ADMIN_PASSWORD', password_hash('BheemAcademy@2025!', PASSWORD_BCRYPT));

// Handle logout
if (isset($_GET['logout'])) {
    session_destroy();
    header('Location: admin-login.php');
    exit;
}

// Check if already logged in
if (isset($_SESSION['admin_authenticated']) && $_SESSION['admin_authenticated'] === true) {
    header('Location: admin-user-management.php');
    exit;
}

$error = '';

// Handle login submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'] ?? '';
    $password = $_POST['password'] ?? '';

    if ($username === ADMIN_USERNAME && password_verify($password, ADMIN_PASSWORD)) {
        $_SESSION['admin_authenticated'] = true;
        $_SESSION['admin_username'] = $username;
        $_SESSION['admin_login_time'] = time();
        header('Location: admin-user-management.php');
        exit;
    } else {
        $error = 'Invalid username or password';
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Bheem Academy</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Global Header Styles -->
    <link rel="stylesheet" href="<?php echo $CFG->wwwroot; ?>/includes/bheem_header_styles.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            padding-top: 120px !important; /* Add space for fixed header */
            position: relative;
            overflow: hidden;
        }

        /* Animated Background */
        .animated-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #667eea, #764ba2, #f093fb);
            z-index: 0;
            overflow: hidden;
        }

        .animated-background::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                        radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.08) 0%, transparent 50%);
            animation: gradientPulse 8s ease-in-out infinite;
            z-index: 1;
        }

        @keyframes gradientPulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
        }

        .bg-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.05) 0%, transparent 50%, rgba(255, 255, 255, 0.05) 100%);
            z-index: 2;
        }

        /* Floating orbs */
        .floating-orb {
            position: absolute;
            border-radius: 50%;
            filter: blur(80px);
            opacity: 0.6;
            animation: floatOrb 15s ease-in-out infinite;
        }

        .orb-1 {
            width: 500px;
            height: 500px;
            background: radial-gradient(circle, rgba(102, 126, 234, 0.6), transparent 70%);
            top: -150px;
            left: -150px;
            animation-delay: 0s;
            animation-name: floatOrb1;
        }

        .orb-2 {
            width: 450px;
            height: 450px;
            background: radial-gradient(circle, rgba(240, 147, 251, 0.55), transparent 70%);
            bottom: -150px;
            right: -150px;
            animation-delay: 3s;
            animation-name: floatOrb2;
        }

        .orb-3 {
            width: 400px;
            height: 400px;
            background: radial-gradient(circle, rgba(118, 75, 162, 0.5), transparent 70%);
            top: 50%;
            right: 10%;
            animation-delay: 6s;
            animation-name: floatOrb3;
        }

        @keyframes floatOrb1 {
            0%, 100% {
                transform: translate(0, 0) scale(1);
            }
            33% {
                transform: translate(100px, -80px) scale(1.2);
            }
            66% {
                transform: translate(-60px, 60px) scale(0.85);
            }
        }

        @keyframes floatOrb2 {
            0%, 100% {
                transform: translate(0, 0) scale(1);
            }
            33% {
                transform: translate(-90px, 70px) scale(1.15);
            }
            66% {
                transform: translate(70px, -50px) scale(0.9);
            }
        }

        @keyframes floatOrb3 {
            0%, 100% {
                transform: translate(0, 0) scale(1);
            }
            33% {
                transform: translate(60px, 80px) scale(1.1);
            }
            66% {
                transform: translate(-80px, -60px) scale(0.95);
            }
        }

        /* Gradient overlay */
        .gradient-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(ellipse at 30% 40%, rgba(139, 92, 246, 0.18) 0%, transparent 50%),
                        radial-gradient(ellipse at 70% 60%, rgba(59, 130, 246, 0.15) 0%, transparent 50%);
            z-index: 3;
            pointer-events: none;
            animation: overlayPulse 15s ease-in-out infinite;
        }

        @keyframes overlayPulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.8;
            }
        }

        /* Light rays */
        .light-rays {
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: 4;
            pointer-events: none;
            opacity: 0.5;
        }

        .ray {
            position: absolute;
            width: 3px;
            height: 100%;
            background: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.6), transparent);
            animation: rayMove 10s linear infinite;
            filter: blur(1px);
        }

        .ray-1 {
            left: 15%;
            animation-delay: 0s;
        }

        .ray-2 {
            left: 45%;
            animation-delay: 3s;
        }

        .ray-3 {
            left: 75%;
            animation-delay: 6s;
        }

        @keyframes rayMove {
            0% {
                transform: translateY(-100%);
                opacity: 0;
            }
            15% {
                opacity: 1;
            }
            85% {
                opacity: 1;
            }
            100% {
                transform: translateY(100%);
                opacity: 0;
            }
        }

        /* Floating particles */
        .particles {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 5;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.4));
            border-radius: 50%;
            animation: particleFloat linear infinite;
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.7);
        }

        @keyframes particleFloat {
            0% {
                transform: translateY(100vh) translateX(0) scale(0);
                opacity: 0;
            }
            10% {
                opacity: 0.8;
                transform: translateY(90vh) translateX(10px) scale(1);
            }
            50% {
                opacity: 1;
                transform: translateY(50vh) translateX(-30px) scale(1.2);
            }
            90% {
                opacity: 0.6;
            }
            100% {
                transform: translateY(-10vh) translateX(50px) scale(0.8);
                opacity: 0;
            }
        }

        /* Floating Animated Images - Vue Login Style */
        .floating-images {
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: 6;
        }

        .bg-image {
            position: absolute;
            overflow: hidden;
            border-radius: 20px;
            box-shadow: 0 25px 70px rgba(0, 0, 0, 0.4),
                        0 15px 40px rgba(102, 126, 234, 0.5),
                        0 8px 20px rgba(118, 75, 162, 0.45),
                        0 0 50px rgba(240, 147, 251, 0.4),
                        inset 0 2px 6px rgba(255, 255, 255, 0.3);
            opacity: 1;
            filter: brightness(1.2) saturate(1.3) contrast(1.12);
            transition: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
            backdrop-filter: blur(25px) saturate(200%);
            -webkit-backdrop-filter: blur(25px) saturate(200%);
            background: linear-gradient(135deg, rgba(26, 32, 62, 0.75), rgba(39, 39, 68, 0.7), rgba(26, 32, 62, 0.75));
            padding: 14px;
            animation: modernCardGlow 5s ease-in-out infinite alternate;
            will-change: transform, opacity;
            border: 2px solid rgba(167, 139, 250, 0.5);
        }

        @keyframes modernCardGlow {
            0%, 100% {
                box-shadow: 0 25px 70px rgba(0, 0, 0, 0.4),
                            0 15px 40px rgba(102, 126, 234, 0.5),
                            0 8px 20px rgba(118, 75, 162, 0.45),
                            0 0 50px rgba(240, 147, 251, 0.4),
                            inset 0 2px 6px rgba(255, 255, 255, 0.3);
            }
            50% {
                box-shadow: 0 30px 80px rgba(0, 0, 0, 0.45),
                            0 20px 50px rgba(102, 126, 234, 0.6),
                            0 12px 30px rgba(118, 75, 162, 0.55),
                            0 0 70px rgba(240, 147, 251, 0.5),
                            inset 0 3px 8px rgba(255, 255, 255, 0.4);
            }
        }

        .bg-image:hover {
            opacity: 1;
            transform: scale(1.08) translateY(-12px) rotate(2deg);
            box-shadow: 0 30px 80px rgba(102, 126, 234, 0.5),
                        0 20px 50px rgba(118, 75, 162, 0.4),
                        0 12px 30px rgba(240, 147, 251, 0.35),
                        0 0 70px rgba(102, 126, 234, 0.3),
                        inset 0 2px 6px rgba(255, 255, 255, 0.5);
            filter: brightness(1.2) saturate(1.3) contrast(1.1);
        }

        .bg-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            display: block;
            border-radius: 14px;
            position: relative;
            z-index: 1;
            transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
            will-change: transform;
        }

        .bg-image:hover img {
            transform: scale(1.05);
        }

        /* SVG Connection Lines */
        .workflow-connections {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 3;
            pointer-events: none;
            overflow: visible;
        }

        .connection-line {
            fill: none;
            stroke-width: 3;
            stroke-linecap: round;
            stroke-linejoin: round;
            opacity: 0.5;
            filter: url(#glow) drop-shadow(0 0 8px rgba(102, 126, 234, 0.6));
            animation: pulse-line 3s ease-in-out infinite;
            stroke-dasharray: 10 5;
            stroke-dashoffset: 0;
            transition: all 0.3s ease;
        }

        .connection-line:hover {
            opacity: 0.8;
            stroke-width: 4;
            filter: url(#glow) drop-shadow(0 0 16px rgba(102, 126, 234, 0.9));
        }

        .line-1-2, .line-4-3 {
            animation: dash-flow 20s linear infinite, pulse-line 3s ease-in-out infinite;
        }

        .line-2-4, .line-3-1 {
            animation: dash-flow 25s linear infinite reverse, pulse-line 3s ease-in-out infinite;
            animation-delay: 1s;
        }

        .line-1-4, .line-2-3 {
            opacity: 0.3;
            stroke-width: 2;
            animation: dash-flow 30s linear infinite, pulse-line 4s ease-in-out infinite;
            animation-delay: 2s;
        }

        @keyframes dash-flow {
            to {
                stroke-dashoffset: -100;
            }
        }

        @keyframes pulse-line {
            0%, 100% {
                opacity: 0.5;
                stroke-width: 3;
            }
            50% {
                opacity: 0.7;
                stroke-width: 3.5;
            }
        }

        .flow-particle {
            filter: drop-shadow(0 0 8px currentColor);
            opacity: 0.9;
            animation: particle-glow 2s ease-in-out infinite;
        }

        @keyframes particle-glow {
            0%, 100% {
                opacity: 0.7;
                r: 4;
            }
            50% {
                opacity: 1;
                r: 6;
            }
        }

        /* Node Indicators */
        .node-indicator {
            position: absolute;
            top: -15px;
            right: -15px;
            width: 40px;
            height: 40px;
            z-index: 10;
            pointer-events: none;
        }

        .node-pulse {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(167, 139, 250, 0.6), transparent 70%);
            animation: node-pulse-animation 2s ease-out infinite;
        }

        @keyframes node-pulse-animation {
            0% {
                transform: translate(-50%, -50%) scale(0.8);
                opacity: 1;
            }
            100% {
                transform: translate(-50%, -50%) scale(2);
                opacity: 0;
            }
        }

        .node-dot {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: linear-gradient(135deg, #a78bfa, #8b5cf6);
            box-shadow: 0 0 0 3px rgba(167, 139, 250, 0.3),
                        0 0 20px rgba(139, 92, 246, 0.8),
                        inset 0 2px 4px rgba(196, 181, 253, 0.5);
            animation: node-dot-pulse 2s ease-in-out infinite;
        }

        @keyframes node-dot-pulse {
            0%, 100% {
                transform: translate(-50%, -50%) scale(1);
                box-shadow: 0 0 0 3px rgba(167, 139, 250, 0.3),
                            0 0 20px rgba(139, 92, 246, 0.8),
                            inset 0 2px 4px rgba(196, 181, 253, 0.5);
            }
            50% {
                transform: translate(-50%, -50%) scale(1.2);
                box-shadow: 0 0 0 5px rgba(167, 139, 250, 0.5),
                            0 0 30px rgba(139, 92, 246, 1),
                            inset 0 2px 4px rgba(196, 181, 253, 0.7);
            }
        }

        .node-label {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translate(-50%, 0);
            background: linear-gradient(135deg, rgba(139, 92, 246, 0.95), rgba(124, 58, 237, 0.95));
            color: #fff;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 10px;
            font-weight: 700;
            white-space: nowrap;
            box-shadow: 0 4px 12px rgba(139, 92, 246, 0.5),
                        inset 0 1px rgba(196, 181, 253, 0.3);
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

        .bg-image:hover .node-label {
            opacity: 1;
        }

        .bg-image:hover .node-indicator {
            animation: node-indicator-bounce 0.6s ease;
        }

        @keyframes node-indicator-bounce {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.3);
            }
        }

        /* Node color variations */
        .image-1 .node-dot {
            background: linear-gradient(135deg, #a78bfa, #8b5cf6);
        }

        .image-2 .node-dot {
            background: linear-gradient(135deg, #7c3aed, #6366f1);
        }

        .image-3 .node-dot {
            background: linear-gradient(135deg, #6366f1, #a78bfa);
        }

        .image-4 .node-dot {
            background: linear-gradient(135deg, #8b5cf6, #7c3aed);
        }

        .image-5 .node-dot {
            background: linear-gradient(135deg, #a855f7, #ec4899);
        }

        .image-6 .node-dot {
            background: linear-gradient(135deg, #f59e0b, #f97316);
        }

        .image-7 .node-dot {
            background: linear-gradient(135deg, #10b981, #14b8a6);
        }

        .image-1 .node-label {
            background: linear-gradient(135deg, rgba(167, 139, 250, 0.98), rgba(139, 92, 246, 0.98));
        }

        .image-2 .node-label {
            background: linear-gradient(135deg, rgba(124, 58, 237, 0.98), rgba(99, 102, 241, 0.98));
        }

        .image-3 .node-label {
            background: linear-gradient(135deg, rgba(99, 102, 241, 0.98), rgba(167, 139, 250, 0.98));
        }

        .image-4 .node-label {
            background: linear-gradient(135deg, rgba(139, 92, 246, 0.98), rgba(124, 58, 237, 0.98));
        }

        .image-5 .node-label {
            background: linear-gradient(135deg, rgba(168, 85, 247, 0.98), rgba(236, 72, 153, 0.98));
        }

        .image-6 .node-label {
            background: linear-gradient(135deg, rgba(245, 158, 11, 0.98), rgba(249, 115, 22, 0.98));
        }

        .image-7 .node-label {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.98), rgba(20, 184, 166, 0.98));
        }

        /* Individual Image Positions and Animations */
        .image-1 {
            width: 120px;
            height: 80px;
            top: 10%;
            left: 6%;
            animation: floatImage1 25s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-2 {
            width: 130px;
            height: 85px;
            top: 8%;
            right: 6%;
            animation: floatImage2 30s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-3 {
            width: 115px;
            height: 75px;
            bottom: 8%;
            left: 7%;
            animation: floatImage3 28s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-4 {
            width: 125px;
            height: 82px;
            bottom: 10%;
            right: 7%;
            animation: floatImage4 32s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-5 {
            width: 120px;
            height: 80px;
            top: 50%;
            left: 15%;
            animation: floatImage5 27s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-6 {
            width: 120px;
            height: 80px;
            top: 50%;
            right: 15%;
            animation: floatImage6 29s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        .image-7 {
            width: 120px;
            height: 80px;
            bottom: 50%;
            left: 50%;
            animation: floatImage7 26s ease-in-out infinite;
            transform-origin: center;
            z-index: 6;
        }

        /* Complex Floating Animations for Each Image */
        @keyframes floatImage1 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            12% {
                transform: translate(30px, -20px) rotate(2deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            25% {
                transform: translate(45px, 10px) rotate(-1deg) scale(1.005);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            38% {
                transform: translate(25px, 35px) rotate(-2deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            50% {
                transform: translate(-15px, 30px) rotate(1.5deg) scale(1.008);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            62% {
                transform: translate(-40px, -10px) rotate(-1.5deg) scale(1.003);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            75% {
                transform: translate(-30px, -30px) rotate(2deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            88% {
                transform: translate(10px, -35px) rotate(-1deg) scale(1.005);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage2 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            14% {
                transform: translate(-35px, 25px) rotate(-2deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            28% {
                transform: translate(-45px, -18px) rotate(2.5deg) scale(1.005);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            42% {
                transform: translate(-22px, -38px) rotate(-1.5deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            56% {
                transform: translate(28px, -32px) rotate(2deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            70% {
                transform: translate(40px, 15px) rotate(-1.5deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            84% {
                transform: translate(20px, 38px) rotate(2.5deg) scale(1.015);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage3 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            16% {
                transform: translate(32px, -26px) rotate(2.5deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            32% {
                transform: translate(-20px, -35px) rotate(-2deg) scale(1.005);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            48% {
                transform: translate(-42px, -12px) rotate(1.5deg) scale(1.003);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            64% {
                transform: translate(-28px, 32px) rotate(-2.5deg) scale(1.008);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            80% {
                transform: translate(23px, 40px) rotate(2deg) scale(1.01);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            92% {
                transform: translate(38px, 8px) rotate(-1.5deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage4 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            13% {
                transform: translate(-35px, -28px) rotate(-2.5deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            27% {
                transform: translate(-40px, 20px) rotate(3deg) scale(1.008);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            41% {
                transform: translate(-17px, 38px) rotate(-2deg) scale(1.005);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            55% {
                transform: translate(32px, 28px) rotate(2.5deg) scale(1.015);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            69% {
                transform: translate(45px, -14px) rotate(-1.5deg) scale(1.01);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            83% {
                transform: translate(15px, -35px) rotate(3deg) scale(1.018);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            96% {
                transform: translate(-8px, -23px) rotate(-1.5deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage5 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            15% {
                transform: translate(25px, -30px) rotate(2deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            30% {
                transform: translate(-30px, -20px) rotate(-2.5deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            45% {
                transform: translate(-25px, 28px) rotate(1.5deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            60% {
                transform: translate(28px, 25px) rotate(-2deg) scale(1.015);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            75% {
                transform: translate(35px, -15px) rotate(2.5deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            90% {
                transform: translate(-20px, -25px) rotate(-1.5deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage6 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            17% {
                transform: translate(-28px, 32px) rotate(-2deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            34% {
                transform: translate(35px, 22px) rotate(2.5deg) scale(1.01);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            51% {
                transform: translate(40px, -25px) rotate(-1.5deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            68% {
                transform: translate(-20px, -35px) rotate(2deg) scale(1.015);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            85% {
                transform: translate(-38px, 18px) rotate(-2.5deg) scale(1.01);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        @keyframes floatImage7 {
            0% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
            18% {
                transform: translate(32px, -28px) rotate(2.5deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            36% {
                transform: translate(-25px, -30px) rotate(-2deg) scale(1.008);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            54% {
                transform: translate(-35px, 20px) rotate(1.5deg) scale(1.012);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            72% {
                transform: translate(22px, 35px) rotate(-2.5deg) scale(1.015);
                filter: brightness(1.055) saturate(1.105) contrast(1.03);
            }
            90% {
                transform: translate(30px, -15px) rotate(2deg) scale(1.01);
                filter: brightness(1.06) saturate(1.11) contrast(1.03);
            }
            100% {
                transform: translate(0, 0) rotate(0deg) scale(1);
                filter: brightness(1.05) saturate(1.1) contrast(1.03);
            }
        }

        .login-container {
            background: white;
            padding: 50px 40px;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 450px;
            animation: slideUp 0.5s ease;
            position: relative;
            z-index: 100;
        }

        @keyframes slideUp {
            from {
                transform: translateY(30px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo i {
            font-size: 60px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        h1 {
            text-align: center;
            color: #2d3748;
            font-size: 28px;
            margin-bottom: 10px;
        }

        .subtitle {
            text-align: center;
            color: #718096;
            font-size: 14px;
            margin-bottom: 35px;
        }

        .error-message {
            background: #fee;
            border: 1px solid #fcc;
            color: #c33;
            padding: 12px 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 10px;
            animation: shake 0.5s;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            color: #2d3748;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .input-wrapper {
            position: relative;
        }

        .input-wrapper i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #718096;
            font-size: 16px;
        }

        .form-control {
            width: 100%;
            padding: 14px 45px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 15px;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-control::placeholder {
            color: #cbd5e0;
        }

        .btn-login {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
        }

        .btn-login:active {
            transform: translateY(0);
        }

        .security-note {
            margin-top: 25px;
            padding: 15px;
            background: #f7fafc;
            border-radius: 10px;
            text-align: center;
        }

        .security-note i {
            color: #667eea;
            margin-right: 8px;
        }

        .security-note p {
            color: #718096;
            font-size: 13px;
            margin: 0;
        }

        .back-home {
            text-align: center;
            margin-top: 20px;
        }

        .back-home a {
            color: #667eea;
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }

        .back-home a:hover {
            color: #764ba2;
            gap: 8px;
        }

        @media (max-width: 480px) {
            .login-container {
                padding: 40px 30px;
            }

            h1 {
                font-size: 24px;
            }
        }
    </style>
</head>
<body>
    <?php
    // Include admin-compatible header
    require_once(__DIR__ . '/includes/bheem_header.php');
    ?>

    <!-- Animated Background -->
    <div class="animated-background">
        <div class="bg-overlay"></div>
        <div class="floating-orb orb-1"></div>
        <div class="floating-orb orb-2"></div>
        <div class="floating-orb orb-3"></div>

        <!-- SVG Connection Lines -->
        <svg class="workflow-connections" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <linearGradient id="lineGradient1" x1="0%" y1="0%" x2="100%" y2="100%">
                    <stop offset="0%" style="stop-color:#667eea;stop-opacity:0.6;"></stop>
                    <stop offset="50%" style="stop-color:#764ba2;stop-opacity:0.8;"></stop>
                    <stop offset="100%" style="stop-color:#f093fb;stop-opacity:0.6;"></stop>
                </linearGradient>
                <linearGradient id="lineGradient2" x1="100%" y1="0%" x2="0%" y2="100%">
                    <stop offset="0%" style="stop-color:#f093fb;stop-opacity:0.6;"></stop>
                    <stop offset="50%" style="stop-color:#667eea;stop-opacity:0.8;"></stop>
                    <stop offset="100%" style="stop-color:#764ba2;stop-opacity:0.6;"></stop>
                </linearGradient>
                <filter id="glow">
                    <feGaussianBlur stdDeviation="3" result="coloredBlur"></feGaussianBlur>
                    <feMerge>
                        <feMergeNode in="coloredBlur"></feMergeNode>
                        <feMergeNode in="SourceGraphic"></feMergeNode>
                    </feMerge>
                </filter>
            </defs>
            <path class="connection-line line-1-2" stroke="url(#lineGradient1)"></path>
            <path class="connection-line line-2-4" stroke="url(#lineGradient2)"></path>
            <path class="connection-line line-4-3" stroke="url(#lineGradient1)"></path>
            <path class="connection-line line-3-1" stroke="url(#lineGradient2)"></path>
            <path class="connection-line line-1-4" stroke="url(#lineGradient1)"></path>
            <path class="connection-line line-2-3" stroke="url(#lineGradient2)"></path>
            <circle class="flow-particle particle-1-2" r="4" fill="#667eea">
                <animateMotion dur="8s" repeatCount="indefinite">
                    <mpath href="#path-1-2"></mpath>
                </animateMotion>
            </circle>
            <circle class="flow-particle particle-2-4" r="4" fill="#f093fb">
                <animateMotion dur="10s" repeatCount="indefinite">
                    <mpath href="#path-2-4"></mpath>
                </animateMotion>
            </circle>
            <circle class="flow-particle particle-4-3" r="4" fill="#764ba2">
                <animateMotion dur="9s" repeatCount="indefinite">
                    <mpath href="#path-4-3"></mpath>
                </animateMotion>
            </circle>
            <circle class="flow-particle particle-3-1" r="4" fill="#667eea">
                <animateMotion dur="11s" repeatCount="indefinite">
                    <mpath href="#path-3-1"></mpath>
                </animateMotion>
            </circle>
        </svg>

        <!-- Floating Animated Images -->
        <div class="floating-images">
            <div class="bg-image image-1" data-node="1">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 1</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/05f05403-bb6c-45af-6d4a-8e2656951f00/public" alt="Logo 1">
            </div>
            <div class="bg-image image-2" data-node="2">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 2</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/0932ca04-4388-4f6e-fcdd-9cd13f451300/public" alt="Logo 2">
            </div>
            <div class="bg-image image-3" data-node="3">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 3</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/33f62e15-35d5-4ca5-5077-b0076e244b00/public" alt="Logo 3">
            </div>
            <div class="bg-image image-4" data-node="4">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 4</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/90a4f6ec-2bdb-4a76-20d3-505cdfaf9700/public" alt="Kodee">
            </div>
            <div class="bg-image image-5" data-node="5">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 5</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/0dafe680-5c75-4f2e-556e-cf90d10ff100/public" alt="Bheem Cloud">
            </div>
            <div class="bg-image image-6" data-node="6">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 6</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/937ded20-dbbb-4da6-53b5-e0b36f6fa800/public" alt="Agent Bheem">
            </div>
            <div class="bg-image image-7" data-node="7">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Node 7</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/e7ee5acc-ef8d-4aa8-de79-a5182807ff00/public" alt="Social Selling AI">
            </div>
        </div>

        <div class="gradient-overlay"></div>
        <div class="light-rays">
            <div class="ray ray-1"></div>
            <div class="ray ray-2"></div>
            <div class="ray ray-3"></div>
        </div>
        <div class="particles" id="particles"></div>
    </div>

    <div class="login-container">
        <div class="logo">
            <i class="fas fa-shield-alt"></i>
        </div>

        <h1>Admin Login</h1>
        <p class="subtitle">User Management Dashboard</p>

        <?php if ($error): ?>
        <div class="error-message">
            <i class="fas fa-exclamation-circle"></i>
            <?php echo htmlspecialchars($error); ?>
        </div>
        <?php endif; ?>

        <form method="POST" action="">
            <div class="form-group">
                <label for="username">Username</label>
                <div class="input-wrapper">
                    <i class="fas fa-user"></i>
                    <input
                        type="text"
                        id="username"
                        name="username"
                        class="form-control"
                        placeholder="Enter admin username"
                        required
                        autocomplete="username"
                        autofocus
                    >
                </div>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <div class="input-wrapper">
                    <i class="fas fa-lock"></i>
                    <input
                        type="password"
                        id="password"
                        name="password"
                        class="form-control"
                        placeholder="Enter admin password"
                        required
                        autocomplete="current-password"
                    >
                </div>
            </div>

            <button type="submit" class="btn-login">
                <i class="fas fa-sign-in-alt"></i>
                Login to Dashboard
            </button>
        </form>

        <div class="security-note">
            <i class="fas fa-lock"></i>
            <p>This is a secure admin area. Unauthorized access is prohibited.</p>
        </div>

        <div class="back-home">
            <a href="index.php">
                <i class="fas fa-arrow-left"></i>
                Back to Homepage
            </a>
        </div>
    </div>

    <script>
        // Auto-clear error message after 5 seconds
        const errorMsg = document.querySelector('.error-message');
        if (errorMsg) {
            setTimeout(() => {
                errorMsg.style.animation = 'slideUp 0.3s reverse';
                setTimeout(() => errorMsg.remove(), 300);
            }, 5000);
        }

        // Prevent form resubmission on refresh
        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }

        // Create floating particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            if (!particlesContainer) {
                console.error('Particles container not found');
                return;
            }

            const particleCount = 40; // Increased from 25

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';

                // Random size between 3-6px (increased from 2-5px)
                const size = Math.random() * 3 + 3;
                particle.style.width = size + 'px';
                particle.style.height = size + 'px';

                // Random starting position
                particle.style.left = Math.random() * 100 + '%';
                particle.style.bottom = '-10px';

                // Random animation duration (8-18 seconds) - faster
                const duration = Math.random() * 10 + 8;
                particle.style.animationDuration = duration + 's';

                // Random animation delay
                particle.style.animationDelay = Math.random() * 6 + 's';

                particlesContainer.appendChild(particle);
            }

            console.log(`Created ${particleCount} particles`);
        }

        // Initialize particles after page load
        window.addEventListener('load', createParticles);

        // Also try to create immediately in case page is already loaded
        if (document.readyState === 'complete') {
            createParticles();
        }

        // Calculate and draw connection lines between images
        function updateConnectionLines() {
            const images = document.querySelectorAll('.bg-image');
            if (images.length < 4) return;

            // Get center positions of images
            const getCenter = (element) => {
                const rect = element.getBoundingClientRect();
                return {
                    x: rect.left + rect.width / 2,
                    y: rect.top + rect.height / 2,
                    width: rect.width,
                    height: rect.height,
                    left: rect.left,
                    right: rect.right,
                    top: rect.top,
                    bottom: rect.bottom
                };
            };

            const positions = Array.from(images).map(img => getCenter(img));

            // Calculate edge point on the border of image toward target
            const getEdgePoint = (from, to) => {
                const dx = to.x - from.x;
                const dy = to.y - from.y;
                const angle = Math.atan2(dy, dx);
                const radius = Math.min(from.width, from.height) / 2;

                const edgeX = from.x + Math.cos(angle) * (radius + 10);
                const edgeY = from.y + Math.sin(angle) * (radius + 10);

                return { x: edgeX, y: edgeY };
            };

            // Create curved path between two points
            const createCurvedPath = (className, fromIdx, toIdx) => {
                const line = document.querySelector(`.${className}`);
                if (line && positions[fromIdx] && positions[toIdx]) {
                    const from = positions[fromIdx];
                    const to = positions[toIdx];

                    const start = getEdgePoint(from, to);
                    const end = getEdgePoint(to, from);

                    // Calculate control points for curved path
                    const dx = end.x - start.x;
                    const dy = end.y - start.y;
                    const dist = Math.sqrt(dx * dx + dy * dy);
                    const curvature = dist * 0.2;

                    // Perpendicular offset for curve
                    const cx1 = start.x + dy * curvature / dist;
                    const cy1 = start.y - dx * curvature / dist;
                    const cx2 = end.x + dy * curvature / dist;
                    const cy2 = end.y - dx * curvature / dist;

                    const pathD = `M ${start.x} ${start.y} C ${cx1} ${cy1}, ${cx2} ${cy2}, ${end.x} ${end.y}`;
                    line.setAttribute('d', pathD);
                    line.setAttribute('id', `path-${fromIdx + 1}-${toIdx + 1}`);
                }
            };

            // Draw connections (1-based indexing for node numbers)
            createCurvedPath('line-1-2', 0, 1);
            createCurvedPath('line-2-4', 1, 3);
            createCurvedPath('line-4-3', 3, 2);
            createCurvedPath('line-3-1', 2, 0);
            createCurvedPath('line-1-4', 0, 3);
            createCurvedPath('line-2-3', 1, 2);
        }

        // Initialize connection lines
        function initConnectionLines() {
            setTimeout(() => {
                updateConnectionLines();
                // Update periodically to handle animation movements
                setInterval(updateConnectionLines, 100);
            }, 100);
        }

        // Start connection lines after page load
        window.addEventListener('load', initConnectionLines);

        // Also start immediately if page is already loaded
        if (document.readyState === 'complete') {
            initConnectionLines();
        }
    </script>
</body>
</html>
