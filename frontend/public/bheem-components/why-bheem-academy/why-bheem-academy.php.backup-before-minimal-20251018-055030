<style>
    /* Why Bheem Academy - Dark Professional Theme with Motion Graphics - v2.0 */
    .why-bheem-academy {
        padding: 60px 0 40px;
        /* Dark Background */
        background: #1a1a1a;
        position: relative;
        overflow: hidden;
        opacity: 0;
        transform: translateY(80px) scale(0.95);
        transition: opacity 1.5s cubic-bezier(0.16, 1, 0.3, 1),
                    transform 1.5s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    /* ==========================
       MOTION GRAPHICS ANIMATIONS
       ========================== */

    /* Badge Animation - Drop with rotation */
    .why-bheem-badge {
        opacity: 0;
        transform: translateY(-40px) rotate(-12deg) scale(0.8);
        transition: all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-badge {
        opacity: 1;
        transform: translateY(0) rotate(0deg) scale(1);
        transition-delay: 0.2s;
    }

    /* Title Animation - 3D Slide with perspective */
    .why-bheem-title {
        opacity: 0;
        transform: translateY(60px) rotateX(45deg);
        transform-style: preserve-3d;
        perspective: 1000px;
        transition: all 1s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-title {
        opacity: 1;
        transform: translateY(0) rotateX(0deg);
        transition-delay: 0.4s;
    }

    /* Subtitle Animation - Fade up with scale */
    .why-bheem-subtitle {
        opacity: 0;
        transform: translateY(40px) scale(0.9);
        transition: all 0.9s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-subtitle {
        opacity: 1;
        transform: translateY(0) scale(1);
        transition-delay: 0.6s;
    }

    /* Description Animation - Fade slide */
    .why-bheem-description {
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.8s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-description {
        opacity: 1;
        transform: translateY(0);
        transition-delay: 0.8s;
    }

    /* Floating Images Section - Container fade */
    .floating-images {
        opacity: 0;
        transform: translateY(40px);
        transition: all 1s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .floating-images {
        opacity: 1;
        transform: translateY(0);
        transition-delay: 1.1s;
    }

    /* Platform Label Animation - Scale and glow */
    .center-platform-label {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.6);
        transition: all 1s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .why-bheem-academy.animate-in .center-platform-label {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
        transition-delay: 1.5s;
    }

    /* Individual Floating Images - 3D entrance with stagger */
    .bg-image {
        opacity: 0;
        transform: translateY(80px) rotateY(-25deg) scale(0.85);
        transform-style: preserve-3d;
        perspective: 1200px;
        transition: all 1s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .bg-image.image-1 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 1.3s;
    }

    .why-bheem-academy.animate-in .bg-image.image-2 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 1.45s;
    }

    .why-bheem-academy.animate-in .bg-image.image-3 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 1.6s;
    }

    .why-bheem-academy.animate-in .bg-image.image-4 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 1.75s;
    }

    .why-bheem-academy.animate-in .bg-image.image-5 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 1.9s;
    }

    .why-bheem-academy.animate-in .bg-image.image-6 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 2.05s;
    }

    .why-bheem-academy.animate-in .bg-image.image-7 {
        opacity: 1;
        transform: translateY(0) rotateY(0deg) scale(1);
        transition-delay: 2.2s;
    }

    /* CTA Button Animation - Pop with bounce */
    .why-bheem-cta-button {
        opacity: 0;
        transform: scale(0.6) translateY(30px);
        transition: all 0.9s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-cta-button {
        opacity: 1;
        transform: scale(1) translateY(0);
        transition-delay: 1.6s;
    }

    /* Stats Bar - Slide up */
    .why-bheem-stats {
        opacity: 0;
        transform: translateY(60px);
        transition: all 1s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .why-bheem-academy.animate-in .why-bheem-stats {
        opacity: 1;
        transform: translateY(0);
        transition-delay: 1.8s;
    }

    /* Individual Stat Items - Staggered scale pop */
    .stat-item {
        opacity: 0;
        transform: scale(0.7) translateY(40px);
        transition: all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .why-bheem-academy.animate-in .stat-item:nth-child(1) {
        opacity: 1;
        transform: scale(1) translateY(0);
        transition-delay: 2s;
    }

    .why-bheem-academy.animate-in .stat-item:nth-child(2) {
        opacity: 1;
        transform: scale(1) translateY(0);
        transition-delay: 2.15s;
    }

    .why-bheem-academy.animate-in .stat-item:nth-child(3) {
        opacity: 1;
        transform: scale(1) translateY(0);
        transition-delay: 2.3s;
    }

    /* GPU Acceleration for smooth animations */
    .why-bheem-badge,
    .why-bheem-title,
    .why-bheem-subtitle,
    .why-bheem-description,
    .floating-images,
    .center-platform-label,
    .bg-image,
    .why-bheem-cta-button,
    .why-bheem-stats,
    .stat-item {
        will-change: transform, opacity;
    }

    /* Add subtle overlay for depth */
    .why-bheem-academy::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.3);
        z-index: 1;
        pointer-events: none;
    }

    /* Animated Glow Overlay */
    .why-bheem-academy::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:
            radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.03) 0%, transparent 40%),
            radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.02) 0%, transparent 40%),
            radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0.02) 0%, transparent 50%);
        animation: gradientPulse 10s ease-in-out infinite;
        pointer-events: none;
        z-index: 2;
    }

    @keyframes gradientPulse {
        0%, 100% {
            opacity: 1;
            transform: scale(1);
        }
        50% {
            opacity: 0.7;
            transform: scale(1.05);
        }
    }

    .why-bheem-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 30px;
        position: relative;
        z-index: 3;
    }

    /* Header Section */
    .why-bheem-header {
        text-align: center;
        margin-bottom: 60px;
        animation: fadeInUp 1s ease-out;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(40px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .why-bheem-badge {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 12px 28px;
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 100px;
        color: #ffffff;
        font-size: 15px;
        font-weight: 700;
        margin-bottom: 24px;
        box-shadow:
            0 4px 20px rgba(255, 255, 255, 0.1),
            inset 0 1px 0 rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(12px);
    }

    .why-bheem-badge i {
        font-size: 20px;
        color: #ffffff;
        filter: drop-shadow(0 2px 8px rgba(255, 255, 255, 0.3));
    }

    .why-bheem-title {
        font-size: clamp(2.5rem, 5vw, 4rem);
        font-weight: 900;
        margin: 0 0 12px 0;
        line-height: 1.1;
        letter-spacing: -0.03em;
        position: relative;
    }

    .why-bheem-title .highlight {
        background: linear-gradient(135deg,
            #667eea 0%,
            #764ba2 25%,
            #f093fb 50%,
            #8b5cf6 75%,
            #667eea 100%);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
        display: inline-block;
        animation: gradientShift 8s ease infinite;
    }

    @keyframes gradientShift {
        0%, 100% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
    }

    @keyframes premiumGradientShift {
        0%, 100% {
            background-position: 0% 50%;
            transform: scale(1);
        }
        50% {
            background-position: 100% 50%;
            transform: scale(1.02);
        }
    }

    .why-bheem-title .white-text {
        color: #ffffff;
        position: relative;
        display: inline-block;
    }

    .why-bheem-subtitle {
        font-size: clamp(1rem, 1.5vw, 1.35rem);
        font-weight: 600;
        color: #ffffff;
        margin: 0 0 30px 0;
        letter-spacing: 0.01em;
        position: relative;
        animation: fadeInUp 1s ease-out;
        text-transform: none;
        background: transparent;
        backdrop-filter: none;
        -webkit-backdrop-filter: none;
        padding: 0;
        border-radius: 0;
        border: none;
        display: inline-block;
        box-shadow: none;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .why-bheem-subtitle .accent {
        background: linear-gradient(135deg,
            #667eea 0%,
            #764ba2 25%,
            #f093fb 50%,
            #8b5cf6 75%,
            #667eea 100%);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: 700;
        animation: gradientShift 8s ease infinite;
    }

    @keyframes premiumAccentPulse {
        0%, 100% {
            background-position: 0% 50%;
            transform: scale(1);
        }
        50% {
            background-position: 100% 50%;
            transform: scale(1.05);
        }
    }

    .why-bheem-description {
        font-size: clamp(1rem, 1.5vw, 1.15rem);
        color: rgba(241, 245, 249, 0.95);
        max-width: 850px;
        margin: 0 auto 40px auto;
        line-height: 1.8;
        animation: fadeInUp 1.2s ease-out;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.6);
        font-weight: 400;
        padding: 0 20px;
        background: linear-gradient(90deg,
            rgba(255, 255, 255, 0.08) 0%,
            rgba(255, 255, 255, 0.04) 50%,
            rgba(255, 255, 255, 0.08) 100%);
        padding: 20px 30px;
        border-radius: 20px;
        border: 1px solid rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(8px);
    }

    /* Floating Images Section - Login Page Style */
    .floating-images {
        position: relative;
        width: 100%;
        min-height: 500px;
        margin: 80px 0;
        z-index: 2;
    }

    .workflow-connections {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        pointer-events: none;
    }

    .connection-line {
        fill: none;
        stroke-width: 3;
        stroke-linecap: round;
        stroke-linejoin: round;
        opacity: 0;
        transition: all 0.4s ease;
    }

    /* Green Glowing Line to Social Selling */
    .green-glow-line {
        stroke: #10b981;
        stroke-width: 0.3;
        opacity: 1;
        filter: drop-shadow(0 0 6px rgba(16, 185, 129, 0.6))
                drop-shadow(0 0 12px rgba(16, 185, 129, 0.4));
        stroke-dasharray: 6 3;
        animation: dashFlow 1.5s linear infinite, glowPulse 2s ease-in-out infinite;
        transform-origin: 50% 14%;
    }

    @keyframes dashFlow {
        to {
            stroke-dashoffset: -9;
        }
    }

    @keyframes glowPulse {
        0%, 100% {
            filter: drop-shadow(0 0 6px rgba(16, 185, 129, 0.6))
                    drop-shadow(0 0 12px rgba(16, 185, 129, 0.4));
            opacity: 0.8;
        }
        50% {
            filter: drop-shadow(0 0 8px rgba(16, 185, 129, 0.8))
                    drop-shadow(0 0 16px rgba(16, 185, 129, 0.6));
            opacity: 1;
        }
    }

    .bg-image {
        position: absolute;
        overflow: hidden;
        border-radius: 18px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5),
                    0 10px 30px rgba(0, 0, 0, 0.3),
                    0 5px 15px rgba(0, 0, 0, 0.2),
                    0 0 40px rgba(255, 255, 255, 0.1),
                    inset 0 1px 3px rgba(255, 255, 255, 0.1);
        opacity: 0.98;
        filter: brightness(1.1) saturate(1.2) contrast(1.05);
        transition: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
        backdrop-filter: blur(16px) saturate(160%);
        -webkit-backdrop-filter: blur(16px) saturate(160%);
        background: rgba(255, 255, 255, 0.05);
        border: 2px solid rgba(255, 255, 255, 0.15);
        padding: 8px;
        animation: modernCardGlow 5s ease-in-out infinite alternate;
        will-change: transform, opacity;
        z-index: 15;
        cursor: grab;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        touch-action: none;
    }

    .bg-image:active {
        cursor: grabbing;
    }

    @keyframes modernCardGlow {
        0%, 100% {
            box-shadow: 0 20px 60px rgba(102, 126, 234, 0.35),
                        0 10px 30px rgba(118, 75, 162, 0.25),
                        0 5px 15px rgba(240, 147, 251, 0.2),
                        0 0 40px rgba(102, 126, 234, 0.15),
                        inset 0 1px 3px rgba(255, 255, 255, 0.3);
        }
        50% {
            box-shadow: 0 25px 70px rgba(102, 126, 234, 0.45),
                        0 15px 40px rgba(118, 75, 162, 0.35),
                        0 8px 20px rgba(240, 147, 251, 0.3),
                        0 0 60px rgba(102, 126, 234, 0.25),
                        inset 0 2px 5px rgba(255, 255, 255, 0.4);
        }
    }

    .bg-image::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 18px;
        border: 2px solid transparent;
        background: linear-gradient(135deg,
            rgba(102, 126, 234, 0.6),
            rgba(240, 147, 251, 0.5),
            rgba(118, 75, 162, 0.6),
            rgba(102, 126, 234, 0.5),
            rgba(240, 147, 251, 0.6)) border-box;
        -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
        opacity: 0.7;
        transition: opacity 0.5s ease;
        pointer-events: none;
        z-index: 2;
        animation: borderGlow 4s ease-in-out infinite alternate;
    }

    @keyframes borderGlow {
        0%, 100% {
            opacity: 0.7;
            filter: brightness(1.1);
        }
        50% {
            opacity: 0.9;
            filter: brightness(1.3);
        }
    }

    .bg-image::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(110deg,
            transparent 20%,
            rgba(255, 255, 255, 0.25) 40%,
            rgba(255, 255, 255, 0.4) 50%,
            rgba(255, 255, 255, 0.25) 60%,
            transparent 80%);
        transform: translate(-100%, -100%) rotate(30deg);
        transition: transform 1.2s cubic-bezier(0.34, 1.56, 0.64, 1);
        pointer-events: none;
        z-index: 3;
        opacity: 0;
    }

    .bg-image:hover {
        opacity: 1;
        transform: scale(1.08) translateY(-12px) rotate(2deg);
        box-shadow: 0 30px 80px rgba(102, 126, 234, 0.5),
                    0 20px 50px rgba(118, 75, 162, 0.4),
                    0 12px 30px rgba(240, 147, 251, 0.35),
                    0 0 70px rgba(102, 126, 234, 0.3),
                    inset 0 2px 6px rgba(255, 255, 255, 0.5);
        filter: brightness(1.2) saturate(1.3) contrast(1.1);
        backdrop-filter: blur(20px) saturate(180%);
        -webkit-backdrop-filter: blur(20px) saturate(180%);
    }

    .bg-image:hover::before {
        opacity: 1;
        background: linear-gradient(135deg,
            rgba(102, 126, 234, 0.8),
            rgba(240, 147, 251, 0.7),
            rgba(118, 75, 162, 0.8),
            rgba(102, 126, 234, 0.7),
            rgba(240, 147, 251, 0.8)) border-box;
    }

    .bg-image:hover::after {
        opacity: 1;
        transform: translate(100%, 100%) rotate(30deg);
    }

    .bg-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        display: block;
        border-radius: 14px;
        position: relative;
        z-index: 1;
        transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
        will-change: transform;
    }

    .bg-image:hover img {
        transform: scale(1.05);
    }

    /* Image Positioning */
    /* Center Platform Box - Centered and Draggable */
    .center-platform-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 25;
        pointer-events: auto;
        cursor: grab;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        touch-action: none;
    }

    .center-platform-label:active {
        cursor: grabbing;
    }

    .platform-text {
        font-size: clamp(1.5rem, 3vw, 2.5rem);
        font-weight: 900;
        text-align: center;
        white-space: nowrap;
        letter-spacing: 0.1em;
        text-transform: uppercase;
        position: relative;
        background: linear-gradient(135deg,
            #8b5cf6 0%,
            #a855f7 30%,
            #ec4899 70%,
            #f472b6 100%);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: gradientShift 8s ease infinite;
    }

    .platform-glow {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 350px;
        height: 350px;
        background: radial-gradient(circle,
            rgba(102, 126, 234, 0.3) 0%,
            rgba(118, 75, 162, 0.25) 25%,
            rgba(240, 147, 251, 0.2) 50%,
            rgba(139, 92, 246, 0.15) 70%,
            transparent 85%);
        animation: glowPulseCenter 4s ease-in-out infinite;
        z-index: 1;
        pointer-events: none;
        filter: blur(15px);
    }

    @keyframes glowPulseCenter {
        0%, 100% {
            transform: translate(-50%, -50%) scale(1);
            opacity: 0.6;
        }
        50% {
            transform: translate(-50%, -50%) scale(1.2);
            opacity: 0.85;
        }
    }

    /* Circular Connection Point Attached to Platform - Hidden Behind */
    .platform-connection-point {
        position: absolute;
        bottom: -30px;
        left: 50%;
        transform: translateX(-50%);
        z-index: -1;
        pointer-events: none;
    }

    .connection-circle {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: linear-gradient(135deg, #10b981, #059669);
        box-shadow:
            0 0 0 4px rgba(16, 185, 129, 0.2),
            0 0 20px rgba(16, 185, 129, 0.6),
            0 0 40px rgba(16, 185, 129, 0.4),
            inset 0 2px 4px rgba(255, 255, 255, 0.3);
        animation: connectionPointPulse 2s ease-in-out infinite;
    }

    @keyframes connectionPointPulse {
        0%, 100% {
            transform: scale(1);
            box-shadow:
                0 0 0 4px rgba(16, 185, 129, 0.2),
                0 0 20px rgba(16, 185, 129, 0.6),
                0 0 40px rgba(16, 185, 129, 0.4),
                inset 0 2px 4px rgba(255, 255, 255, 0.3);
        }
        50% {
            transform: scale(1.15);
            box-shadow:
                0 0 0 6px rgba(16, 185, 129, 0.3),
                0 0 30px rgba(16, 185, 129, 0.8),
                0 0 60px rgba(16, 185, 129, 0.6),
                inset 0 2px 4px rgba(255, 255, 255, 0.5);
        }
    }

    /* Circular Layout - Images arranged in circle around platform */
    .image-1 {
        width: 220px;
        height: 150px;
        top: calc(50% - 280px);
        left: calc(50% - 110px);
        animation: floatImage1 25s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-2 {
        width: 230px;
        height: 155px;
        top: calc(50% - 200px);
        left: calc(50% - 350px);
        animation: floatImage2 30s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-3 {
        width: 215px;
        height: 145px;
        top: calc(50% + 50px);
        left: calc(50% - 390px);
        animation: floatImage3 28s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-4 {
        width: 225px;
        height: 152px;
        top: calc(50% + 220px);
        left: calc(50% - 260px);
        animation: floatImage4 32s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-5 {
        width: 218px;
        height: 148px;
        top: calc(50% + 220px);
        left: calc(50% + 40px);
        animation: floatImage5 27s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-6 {
        width: 222px;
        height: 150px;
        top: calc(50% + 50px);
        left: calc(50% + 180px);
        animation: floatImage6 29s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    .image-7 {
        width: 228px;
        height: 154px;
        top: calc(50% - 200px);
        left: calc(50% + 130px);
        animation: floatImage7 26s ease-in-out infinite;
        transform-origin: center;
        z-index: 20;
    }

    /* Float Animations */
    @keyframes floatImage1 {
        0%, 100% {
            transform: translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        12% {
            transform: translate(30px, -20px) rotate(2deg) scale(1.01);
            
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        25% {
            transform: translate(45px, 10px) rotate(-1deg) scale(1.005);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        38% {
            transform: translate(25px, 35px) rotate(-2deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        50% {
            transform: translate(-15px, 30px) rotate(1.5deg) scale(1.008);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        62% {
            transform: translate(-40px, -10px) rotate(-1.5deg) scale(1.003);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        75% {
            transform: translate(-30px, -30px) rotate(2deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        88% {
            transform: translate(10px, -35px) rotate(-1deg) scale(1.005);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
    }

    @keyframes floatImage2 {
        0%, 100% {
            transform: translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        14% {
            transform: translate(-35px, 25px) rotate(-2deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        28% {
            transform: translate(-45px, -18px) rotate(2.5deg) scale(1.005);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        42% {
            transform: translate(-22px, -38px) rotate(-1.5deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        56% {
            transform: translate(28px, -32px) rotate(2deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        70% {
            transform: translate(40px, 15px) rotate(-1.5deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        84% {
            transform: translate(20px, 38px) rotate(2.5deg) scale(1.015);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
    }

    @keyframes floatImage3 {
        0%, 100% {
            transform: translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        16% {
            transform: translate(32px, -26px) rotate(2.5deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        32% {
            transform: translate(-20px, -35px) rotate(-2deg) scale(1.005);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        48% {
            transform: translate(-42px, -12px) rotate(1.5deg) scale(1.003);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        64% {
            transform: translate(-28px, 32px) rotate(-2.5deg) scale(1.008);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        80% {
            transform: translate(23px, 40px) rotate(2deg) scale(1.01);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        92% {
            transform: translate(38px, 8px) rotate(-1.5deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
    }

    @keyframes floatImage4 {
        0%, 100% {
            transform: translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        13% {
            transform: translate(-35px, -28px) rotate(-2.5deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        27% {
            transform: translate(-40px, 20px) rotate(3deg) scale(1.008);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        41% {
            transform: translate(-17px, 38px) rotate(-2deg) scale(1.005);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        55% {
            transform: translate(32px, 28px) rotate(2.5deg) scale(1.015);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        69% {
            transform: translate(45px, -14px) rotate(-1.5deg) scale(1.01);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        83% {
            transform: translate(15px, -35px) rotate(3deg) scale(1.018);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        96% {
            transform: translate(-8px, -23px) rotate(-1.5deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
    }

    @keyframes floatImage5 {
        0%, 100% {
            transform: translateY(-50%) translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        15% {
            transform: translateY(-50%) translate(25px, -30px) rotate(2deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        30% {
            transform: translateY(-50%) translate(-30px, -20px) rotate(-2.5deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        45% {
            transform: translateY(-50%) translate(-25px, 28px) rotate(1.5deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        60% {
            transform: translateY(-50%) translate(28px, 25px) rotate(-2deg) scale(1.015);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        75% {
            transform: translateY(-50%) translate(35px, -15px) rotate(2.5deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        90% {
            transform: translateY(-50%) translate(-20px, -25px) rotate(-1.5deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
    }

    @keyframes floatImage6 {
        0%, 100% {
            transform: translateY(-50%) translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        17% {
            transform: translateY(-50%) translate(-28px, 32px) rotate(-2.5deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        34% {
            transform: translateY(-50%) translate(35px, 22px) rotate(2deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        51% {
            transform: translateY(-50%) translate(28px, -28px) rotate(-1.5deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        68% {
            transform: translateY(-50%) translate(-32px, -18px) rotate(2.5deg) scale(1.015);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        85% {
            transform: translateY(-50%) translate(-22px, 35px) rotate(-2deg) scale(1.01);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
    }

    @keyframes floatImage7 {
        0%, 100% {
            transform: translateX(-50%) translate(0, 0) rotate(0deg) scale(1);
            filter: brightness(1.05) saturate(1.1) contrast(1.03);
        }
        14% {
            transform: translateX(-50%) translate(32px, -25px) rotate(2.5deg) scale(1.012);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        28% {
            transform: translateX(-50%) translate(-28px, -30px) rotate(-2deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        42% {
            transform: translateX(-50%) translate(-35px, 20px) rotate(1.5deg) scale(1.015);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        56% {
            transform: translateX(-50%) translate(25px, 30px) rotate(-2.5deg) scale(1.01);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
        70% {
            transform: translateX(-50%) translate(38px, -15px) rotate(2deg) scale(1.018);
            filter: brightness(1.06) saturate(1.11) contrast(1.03);
        }
        84% {
            transform: translateX(-50%) translate(-18px, -32px) rotate(-1.5deg) scale(1.008);
            filter: brightness(1.055) saturate(1.105) contrast(1.03);
        }
    }

    /* Node Indicators */
    .node-indicator {
        position: absolute;
        top: -15px;
        right: -15px;
        width: 40px;
        height: 40px;
        z-index: 20;
        pointer-events: none;
    }

    .node-pulse {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: radial-gradient(circle, rgba(167, 139, 250, 0.6), transparent 70%);
        animation: node-pulse-animation 2s ease-out infinite;
    }

    @keyframes node-pulse-animation {
        0% {
            transform: translate(-50%, -50%) scale(0.8);
            opacity: 1;
        }
        100% {
            transform: translate(-50%, -50%) scale(2);
            opacity: 0;
        }
    }

    .node-dot {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background: linear-gradient(135deg, #a78bfa, #8b5cf6);
        box-shadow: 0 0 0 3px rgba(167, 139, 250, 0.3),
                    0 0 20px rgba(139, 92, 246, 0.8),
                    inset 0 2px 4px rgba(196, 181, 253, 0.5);
        animation: node-dot-pulse 2s ease-in-out infinite;
    }

    @keyframes node-dot-pulse {
        0%, 100% {
            transform: translate(-50%, -50%) scale(1);
            box-shadow: 0 0 0 3px rgba(167, 139, 250, 0.3),
                        0 0 20px rgba(139, 92, 246, 0.8),
                        inset 0 2px 4px rgba(196, 181, 253, 0.5);
        }
        50% {
            transform: translate(-50%, -50%) scale(1.2);
            box-shadow: 0 0 0 5px rgba(167, 139, 250, 0.5),
                        0 0 30px rgba(139, 92, 246, 1),
                        inset 0 2px 4px rgba(196, 181, 253, 0.7);
        }
    }

    .node-label {
        position: absolute;
        top: -30px;
        left: 50%;
        transform: translateX(-50%);
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.95), rgba(124, 58, 237, 0.95));
        color: #fff;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 10px;
        font-weight: 700;
        white-space: nowrap;
        box-shadow: 0 4px 12px rgba(139, 92, 246, 0.5),
                    inset 0 1px rgba(196, 181, 253, 0.3);
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
        letter-spacing: 0.5px;
        text-transform: uppercase;
    }

    .bg-image:hover .node-label {
        opacity: 1;
    }

    .bg-image:hover .node-indicator {
        animation: node-indicator-bounce 0.6s ease;
    }

    @keyframes node-indicator-bounce {
        0%, 100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.3);
        }
    }

    /* Gradient Overlay */
    .gradient-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: transparent;
        z-index: 5;
        pointer-events: none;
    }

    /* CTA Section */
    .why-bheem-cta {
        text-align: center;
        margin-top: 150px;
        animation: fadeInUp 1s ease-out 0.4s backwards;
    }

    .why-bheem-cta-button {
        display: inline-flex;
        align-items: center;
        gap: 15px;
        padding: 18px 45px;
        background:
            linear-gradient(135deg,
                #8b5cf6 0%,
                #a855f7 30%,
                #ec4899 70%,
                #f472b6 100%);
        color: white;
        text-decoration: none;
        border-radius: 60px;
        font-weight: 800;
        font-size: 1.15rem;
        transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
        box-shadow:
            0 18px 45px rgba(139, 92, 246, 0.4),
            0 10px 25px rgba(236, 72, 153, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
        border: 3px solid rgba(255, 255, 255, 0.4);
        position: relative;
        overflow: hidden;
    }

    .why-bheem-cta-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
            transparent,
            rgba(255, 255, 255, 0.4),
            transparent);
        transition: left 0.7s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .why-bheem-cta-button:hover::before {
        left: 100%;
    }

    .why-bheem-cta-button:hover {
        transform: translateY(-5px) scale(1.05);
        box-shadow:
            0 25px 60px rgba(139, 92, 246, 0.5),
            0 15px 35px rgba(236, 72, 153, 0.4),
            inset 0 2px 0 rgba(255, 255, 255, 0.4);
    }

    .why-bheem-cta-button i {
        font-size: 1.2rem;
        transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .why-bheem-cta-button:hover i {
        transform: translateX(8px) rotate(15deg);
    }

    /* Stats Bar - Premium Modern Design */
    .why-bheem-stats {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        margin-top: 70px;
        max-width: 900px;
        margin-left: auto;
        margin-right: auto;
        animation: fadeInUp 1s ease-out 0.5s backwards;
        position: relative;
    }

    .stat-item {
        text-align: center;
        padding: 40px 32px;
        background: linear-gradient(135deg,
            rgba(139, 92, 246, 0.15) 0%,
            rgba(168, 85, 247, 0.1) 25%,
            rgba(236, 72, 153, 0.15) 50%,
            rgba(244, 114, 182, 0.1) 75%,
            rgba(139, 92, 246, 0.15) 100%);
        backdrop-filter: blur(20px) saturate(150%);
        -webkit-backdrop-filter: blur(20px) saturate(150%);
        border-radius: 24px;
        border: 2px solid rgba(255, 255, 255, 0.2);
        position: relative;
        transition: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
        overflow: hidden;
        box-shadow:
            0 10px 40px rgba(139, 92, 246, 0.25),
            0 5px 20px rgba(236, 72, 153, 0.15),
            inset 0 1px 2px rgba(255, 255, 255, 0.2);
    }

    .stat-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg,
            rgba(139, 92, 246, 0.3) 0%,
            rgba(236, 72, 153, 0.25) 50%,
            rgba(244, 114, 182, 0.3) 100%);
        opacity: 0;
        border-radius: 24px;
        transition: opacity 0.5s ease;
        z-index: 0;
    }

    .stat-item:hover::before {
        opacity: 1;
    }

    .stat-item:hover {
        transform: translateY(-10px) scale(1.03);
        box-shadow:
            0 20px 60px rgba(139, 92, 246, 0.4),
            0 10px 30px rgba(236, 72, 153, 0.3),
            inset 0 1px 2px rgba(255, 255, 255, 0.3);
        border-color: rgba(255, 255, 255, 0.3);
    }

    .stat-value {
        font-size: clamp(2.5rem, 4vw, 3.5rem);
        font-weight: 900;
        display: block;
        line-height: 1;
        margin-bottom: 12px;
        position: relative;
        z-index: 1;
        background: linear-gradient(135deg,
            #8b5cf6 0%,
            #a855f7 30%,
            #ec4899 70%,
            #f472b6 100%);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: gradientShift 8s ease infinite;
    }

    @keyframes statGradientShift {
        0%, 100% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
    }

    .stat-label {
        font-size: 0.875rem;
        color: rgba(255, 255, 255, 0.9);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .stat-label::before {
        content: '';
        width: 8px;
        height: 8px;
        border-radius: 50%;
        display: inline-block;
        background: linear-gradient(135deg, #8b5cf6, #ec4899);
        box-shadow:
            0 0 12px rgba(139, 92, 246, 0.6),
            0 0 20px rgba(236, 72, 153, 0.4);
        animation: dotPulse 2s ease-in-out infinite;
    }

    @keyframes dotPulse {
        0%, 100% {
            transform: scale(1);
            box-shadow:
                0 0 12px rgba(139, 92, 246, 0.6),
                0 0 20px rgba(236, 72, 153, 0.4);
        }
        50% {
            transform: scale(1.2);
            box-shadow:
                0 0 18px rgba(139, 92, 246, 0.8),
                0 0 30px rgba(236, 72, 153, 0.6);
        }
    }

    /* Responsive Design */

    /* Large Desktop (1440px and up) */
    @media (min-width: 1440px) {
        .why-bheem-container {
            max-width: 1600px;
            padding: 0 40px;
        }

    }

    /* Laptop/Tablet Landscape (1024px - 1199px) */
    @media (max-width: 1199px) and (min-width: 1024px) {
        .why-bheem-academy {
            padding: 70px 0;
        }


        .why-bheem-stats {
            gap: 50px;
        }
    }

    /* Tablet Portrait (768px - 1023px) */
    @media (max-width: 1023px) and (min-width: 768px) {
        .why-bheem-academy {
            padding: 60px 0 50px;
        }

        .why-bheem-container {
            padding: 0 25px;
        }

        .why-bheem-header {
            margin-bottom: 50px;
        }


        .why-bheem-cta-button {
            padding: 18px 42px;
            font-size: 17px;
        }

        .why-bheem-stats {
            max-width: 700px;
            gap: 2px;
        }

        .stat-item {
            padding: 32px 24px;
        }

        .stat-value {
            font-size: 2.25rem;
        }

        .stat-label {
            font-size: 0.8rem;
        }
    }

    /* Mobile Landscape (640px - 767px) */
    @media (max-width: 767px) and (min-width: 640px) {
        .why-bheem-academy {
            padding: 50px 0 45px;
        }

        .why-bheem-container {
            padding: 0 20px;
        }


        .why-bheem-cta-button {
            padding: 16px 38px;
            font-size: 16px;
        }

        .why-bheem-stats {
            grid-template-columns: 1fr;
            max-width: 400px;
            gap: 2px;
        }

        .stat-item {
            padding: 28px 24px;
        }

        .stat-item:first-child {
            border-radius: 22px 22px 0 0;
        }

        .stat-item:last-child {
            border-radius: 0 0 22px 22px;
        }

        .stat-value {
            font-size: 2.25rem;
        }

        .stat-label {
            font-size: 0.8rem;
        }
    }

    /* Mobile Portrait (480px - 639px) */
    @media (max-width: 639px) and (min-width: 480px) {
        .why-bheem-academy {
            padding: 45px 0 40px;
        }

        .why-bheem-container {
            padding: 0 18px;
        }

        .why-bheem-header {
            margin-bottom: 40px;
        }

        .why-bheem-badge {
            font-size: 14px;
            padding: 10px 20px;
        }


        .why-bheem-cta-button {
            padding: 15px 34px;
            font-size: 16px;
            gap: 12px;
        }

        .why-bheem-cta-button i {
            font-size: 20px;
        }

        .why-bheem-stats {
            grid-template-columns: 1fr;
            max-width: 350px;
            margin-top: 50px;
        }

        .stat-item {
            padding: 24px 20px;
        }

        .stat-item:first-child {
            border-radius: 20px 20px 0 0;
        }

        .stat-item:last-child {
            border-radius: 0 0 20px 20px;
        }

        .stat-value {
            font-size: 2rem;
        }

        .stat-label {
            font-size: 0.75rem;
        }
    }

    /* Small Mobile (320px - 479px) */
    @media (max-width: 479px) {
        .why-bheem-academy {
            padding: 40px 0 35px;
        }

        .why-bheem-container {
            padding: 0 15px;
        }

        .why-bheem-header {
            margin-bottom: 35px;
        }

        .why-bheem-badge {
            font-size: 13px;
            padding: 9px 18px;
            gap: 8px;
        }

        .why-bheem-badge i {
            font-size: 18px;
        }


        .why-bheem-cta {
            margin-top: 45px;
        }

        .why-bheem-cta-button {
            padding: 14px 30px;
            font-size: 15px;
            gap: 10px;
        }

        .why-bheem-cta-button i {
            font-size: 19px;
        }

        .why-bheem-stats {
            grid-template-columns: 1fr;
            max-width: 320px;
            margin-top: 45px;
        }

        .stat-item {
            padding: 22px 18px;
        }

        .stat-item:first-child {
            border-radius: 18px 18px 0 0;
        }

        .stat-item:last-child {
            border-radius: 0 0 18px 18px;
        }

        .stat-value {
            font-size: 1.85rem;
        }

        .stat-label {
            font-size: 0.7rem;
            letter-spacing: 0.08em;
        }
    }

    /* Extra Small Mobile (less than 320px) */
    @media (max-width: 319px) {
        .why-bheem-academy {
            padding: 35px 0 30px;
        }

        .why-bheem-container {
            padding: 0 12px;
        }

        .why-bheem-badge {
            font-size: 12px;
            padding: 8px 16px;
        }


        .why-bheem-cta-button {
            padding: 13px 26px;
            font-size: 14px;
        }

        .why-bheem-stats {
            max-width: 280px;
        }

        .stat-item {
            padding: 20px 16px;
        }

        .stat-value {
            font-size: 1.7rem;
        }

        .stat-label {
            font-size: 0.65rem;
        }
    }
</style>

<!-- Why Bheem Academy Section -->
<section class="why-bheem-academy">
    <div class="why-bheem-container">
        <!-- Header -->
        <div class="why-bheem-header">
            <div class="why-bheem-badge">
                <i class="fas fa-star"></i>
                <span>Kerala's Premier AI Academy</span>
            </div>
            <h2 class="why-bheem-title">
                <span class="white-text">Why </span>
                <span class="highlight">Bheem Academy</span>
                <span class="white-text">?</span>
            </h2>
            <p class="why-bheem-subtitle">
                Kerala's First <span class="accent">Fully Fledged AI Academy</span>
            </p>
            <p class="why-bheem-description">
                Experience the future of education with cutting-edge AI technology, automated workflows,
                and personalized learning paths designed to accelerate your success.
            </p>
        </div>

        <!-- Floating Images Section (Login Page Style) -->
        <div class="floating-images">
            <svg class="workflow-connections" viewBox="0 0 100 100" preserveAspectRatio="none">
                <defs>
                    <filter id="glow">
                        <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
                        <feMerge>
                            <feMergeNode in="coloredBlur"/>
                            <feMergeNode in="SourceGraphic"/>
                        </feMerge>
                    </filter>
                </defs>
                <!-- Green Glowing Lines: Connection Point to All Images -->
                <path class="green-glow-line line-1" d="M 50,22 Q 26,38 7,55" stroke="#10b981"/>
                <path class="green-glow-line line-2" d="M 50,22 Q 42,38 20,55" stroke="#10b981"/>
                <path class="green-glow-line line-3" d="M 50,22 Q 45,38 33,55" stroke="#10b981"/>
                <path class="green-glow-line line-4" d="M 50,22 Q 48,38 47,55" stroke="#10b981"/>
                <path class="green-glow-line line-5" d="M 50,22 Q 52,38 60,55" stroke="#10b981"/>
                <path class="green-glow-line line-6" d="M 50,22 Q 58,38 73,55" stroke="#10b981"/>
                <path class="green-glow-line line-7" d="M 50,22 Q 65,38 86,55" stroke="#10b981"/>
                <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="0%">
                    <stop offset="0%" style="stop-color:#667eea;stop-opacity:0.6" />
                    <stop offset="100%" style="stop-color:#764ba2;stop-opacity:0.6" />
                </linearGradient>
                <linearGradient id="gradient2" x1="0%" y1="0%" x2="0%" y2="100%">
                    <stop offset="0%" style="stop-color:#764ba2;stop-opacity:0.6" />
                    <stop offset="100%" style="stop-color:#8b5cf6;stop-opacity:0.6" />
                </linearGradient>
                <linearGradient id="gradient3" x1="100%" y1="0%" x2="0%" y2="0%">
                    <stop offset="0%" style="stop-color:#a855f7;stop-opacity:0.6" />
                    <stop offset="100%" style="stop-color:#f093fb;stop-opacity:0.6" />
                </linearGradient>
                <linearGradient id="gradient4" x1="0%" y1="100%" x2="0%" y2="0%">
                    <stop offset="0%" style="stop-color:#f093fb;stop-opacity:0.6" />
                    <stop offset="100%" style="stop-color:#ec4899;stop-opacity:0.6" />
                </linearGradient>
            </svg>

            <!-- Floating Feature Cards with Glassmorphism -->
            <!-- Center Platform Text Label with Attached Connection Point -->
            <div class="center-platform-label">
                <div class="platform-text" data-text="Bheem Platform">Bheem Platform</div>
                <div class="platform-glow"></div>

                <!-- Circular Connection Point Attached to Platform -->
                <div class="platform-connection-point">
                    <div class="connection-circle"></div>
                </div>
            </div>

            <div class="bg-image image-1">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">AI Flow</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/05f05403-bb6c-45af-6d4a-8e2656951f00/public" alt="Bheem Flow">
            </div>

            <div class="bg-image image-2">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">AI Central</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/33f62e15-35d5-4ca5-5077-b0076e244b00/public" alt="Bheem AI Buzz Central">
            </div>

            <div class="bg-image image-3">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">AI Agent</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/937ded20-dbbb-4da6-53b5-e0b36f6fa800/public" alt="Agent Bheem">
            </div>

            <div class="bg-image image-4">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Social AI</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/e7ee5acc-ef8d-4aa8-de79-a5182807ff00/public" alt="Social Selling AI">
            </div>

            <div class="bg-image image-5">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Cloud</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/0dafe680-5c75-4f2e-556e-cf90d10ff100/public" alt="Bheem Cloud">
            </div>

            <div class="bg-image image-6">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Academy</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/0932ca04-4388-4f6e-fcdd-9cd13f451300/public" alt="Bheem Academy">
            </div>

            <div class="bg-image image-7">
                <div class="node-indicator">
                    <div class="node-pulse"></div>
                    <div class="node-dot"></div>
                    <div class="node-label">Kodee AI</div>
                </div>
                <img src="https://imagedelivery.net/GSYWs1kbpG8XypJe3mjC0Q/90a4f6ec-2bdb-4a76-20d3-505cdfaf9700/public" alt="Kodee AI Assistant">
            </div>

            <div class="gradient-overlay"></div>
        </div>

        <!-- N8N Style Draggable Node Script -->
        <script>
        (function() {
            const canvas = document.querySelector('.floating-images');
            const svg = document.querySelector('.workflow-connections');
            const nodes = document.querySelectorAll('.bg-image');

            if (!canvas || !svg || !nodes.length) return;

            let draggedNode = null;
            let offset = { x: 0, y: 0 };
            let isDragging = false;

            // Initialize nodes with data attributes for drag functionality
            function initNodes() {
                const platformBox = document.querySelector('.center-platform-label');

                nodes.forEach((node, index) => {
                    node.dataset.nodeId = index + 1;
                    node.style.cursor = 'grab';

                    // Add drag event listeners
                    node.addEventListener('mousedown', startDrag);
                    node.addEventListener('touchstart', startDrag, { passive: false });
                });

                // Add drag functionality to platform box
                if (platformBox) {
                    platformBox.dataset.nodeId = 'platform';
                    platformBox.addEventListener('mousedown', startDrag);
                    platformBox.addEventListener('touchstart', startDrag, { passive: false });
                }
            }

            function startDrag(e) {
                e.preventDefault();

                draggedNode = e.currentTarget;
                isDragging = true;

                const rect = draggedNode.getBoundingClientRect();
                const canvasRect = canvas.getBoundingClientRect();
                const clientX = e.type.includes('touch') ? e.touches[0].clientX : e.clientX;
                const clientY = e.type.includes('touch') ? e.touches[0].clientY : e.clientY;

                offset.x = clientX - rect.left;
                offset.y = clientY - rect.top;

                draggedNode.style.zIndex = '1000';
                draggedNode.style.cursor = 'grabbing';

                // Pause animation while dragging
                draggedNode.style.animation = 'none';

                document.addEventListener('mousemove', drag);
                document.addEventListener('touchmove', drag, { passive: false });
                document.addEventListener('mouseup', stopDrag);
                document.addEventListener('touchend', stopDrag);
            }

            function drag(e) {
                if (!draggedNode || !isDragging) return;

                e.preventDefault();

                const canvasRect = canvas.getBoundingClientRect();
                const clientX = e.type.includes('touch') ? e.touches[0].clientX : e.clientX;
                const clientY = e.type.includes('touch') ? e.touches[0].clientY : e.clientY;

                let x = clientX - canvasRect.left - offset.x;
                let y = clientY - canvasRect.top - offset.y;

                // Boundaries - keep within canvas
                x = Math.max(0, Math.min(x, canvasRect.width - draggedNode.offsetWidth));
                y = Math.max(0, Math.min(y, canvasRect.height - draggedNode.offsetHeight));

                draggedNode.style.left = x + 'px';
                draggedNode.style.top = y + 'px';
            }

            function stopDrag() {
                if (draggedNode) {
                    draggedNode.style.zIndex = '';
                    draggedNode.style.cursor = 'grab';

                    // Resume animation after a short delay
                    setTimeout(() => {
                        if (draggedNode) {
                            const nodeId = draggedNode.dataset.nodeId;

                            // Only resume animation for image nodes, not platform
                            if (nodeId !== 'platform') {
                                const animationName = `floatImage${nodeId}`;
                                const durations = [25, 30, 28, 32, 27, 29, 26];
                                draggedNode.style.animation = `${animationName} ${durations[nodeId - 1]}s ease-in-out infinite`;
                            } else {
                                // Resume platform box glow animation
                                draggedNode.style.animation = '';
                            }
                        }
                    }, 100);

                    draggedNode = null;
                }

                isDragging = false;

                document.removeEventListener('mousemove', drag);
                document.removeEventListener('touchmove', drag);
                document.removeEventListener('mouseup', stopDrag);
                document.removeEventListener('touchend', stopDrag);
            }

            // Initialize on load
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initNodes);
            } else {
                initNodes();
            }
        })();

        // Animate green lines to follow all images from the connection point
        (function() {
            const connectionPoint = document.querySelector('.platform-connection-point');
            const canvas = document.querySelector('.floating-images');
            const lines = [];

            // Initialize all 7 lines with their corresponding images
            for (let i = 1; i <= 7; i++) {
                const line = document.querySelector(`.line-${i}`);
                const image = document.querySelector(`.image-${i}`);
                if (line && image) {
                    lines.push({ line, image });
                }
            }

            if (!connectionPoint || !canvas || lines.length === 0) return;

            function updateLinePositions() {
                const canvasRect = canvas.getBoundingClientRect();
                const pointRect = connectionPoint.getBoundingClientRect();

                // Calculate the center of connection point in SVG coordinates (0-100)
                const startX = ((pointRect.left - canvasRect.left + pointRect.width / 2) / canvasRect.width) * 100;
                const startY = ((pointRect.top - canvasRect.top + pointRect.height / 2) / canvasRect.height) * 100;

                // Update each line to follow its corresponding image
                lines.forEach(({ line, image }) => {
                    const imageRect = image.getBoundingClientRect();

                    // Calculate the center of image in SVG coordinates (0-100)
                    const targetX = ((imageRect.left - canvasRect.left + imageRect.width / 2) / canvasRect.width) * 100;
                    const targetY = ((imageRect.top - canvasRect.top + imageRect.height / 2) / canvasRect.height) * 100;

                    // Update the path to start from connection point and end at the moving target
                    const controlX = (startX + targetX) / 2;
                    const controlY = (startY + targetY) / 2;
                    const newPath = `M ${startX},${startY} Q ${controlX},${controlY} ${targetX},${targetY}`;
                    line.setAttribute('d', newPath);
                });
            }

            // Update line positions continuously
            function animate() {
                updateLinePositions();
                requestAnimationFrame(animate);
            }

            animate();
        })();
        </script>

        <!-- CTA Button -->
        <div class="why-bheem-cta">
            <a href="#enroll" class="why-bheem-cta-button">
                <span>Start Your Journey</span>
                <i class="fas fa-arrow-right"></i>
            </a>
        </div>

        <!-- Stats Bar -->
        <div class="why-bheem-stats">
            <div class="stat-item">
                <span class="stat-value">10K+</span>
                <span class="stat-label">Students</span>
            </div>
            <div class="stat-item">
                <span class="stat-value">500+</span>
                <span class="stat-label">AI Courses</span>
            </div>
            <div class="stat-item">
                <span class="stat-value">95%</span>
                <span class="stat-label">Success Rate</span>
            </div>
        </div>
    </div>
</section>

<script>
// Scroll Animation - Intersection Observer
(function() {
    const section = document.querySelector('.why-bheem-academy');

    if (!section) return;

    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.15 // Trigger when 15% of section is visible
    };

    const observerCallback = (entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // Add animate-in class when section enters viewport
                entry.target.classList.add('animate-in');
            } else {
                // Remove animate-in class when section leaves viewport
                // This creates the effect when scrolling back up
                entry.target.classList.remove('animate-in');
            }
        });
    };

    const observer = new IntersectionObserver(observerCallback, observerOptions);
    observer.observe(section);
})();
</script>
